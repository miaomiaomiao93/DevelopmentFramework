<#+
// <copyright file="DbSessionOnly.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class DbSessionOnly : CSharpTemplate
{
	public string FileName
	{
		get
			{
				return "DbSessionOnly.cs";
			}
	}
	private string _idalNameSpace;
	public DbSessionOnly(string idalNameSpace)
	{
		_idalNameSpace=idalNameSpace;
	}

	public override string TransformText()
	{
		base.TransformText();
#>
//=============================================================================
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//		如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类实现 AdvertInfoConfigurationAppend 分部方法。
// </auto-generated>
//=============================================================================
using <#=_idalNameSpace#>;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Remoting.Messaging;
using System.Text;
using System.Threading.Tasks;

namespace <#= DefaultNamespace.Split('.')[0] #>
{
	public class DbSessionOnly
	{
		 public static IDbSession CreateDbSession()
		  {
			  DbSession dbSession = (DbSession)CallContext.GetData("dbSession");
			  if (dbSession == null)
			  {
				  dbSession = new DbSession();
				  CallContext.SetData("dbSession", dbSession);
			  }
			  return dbSession;
		  }
	  }
}
<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
