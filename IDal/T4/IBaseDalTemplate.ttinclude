<#+
// <copyright file="IBaseDalTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class IBaseDalTemplate : CSharpTemplate
{
	public string FileName
	{
		get
			{
				return "IBaseDal.cs";
			}
	}

	public override string TransformText()
	{
		base.TransformText();
#>
//=============================================================================
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果重新生成代码，这些更改将会丢失。
// </auto-generated>
//=============================================================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;
namespace <#= DefaultNamespace.Split('.')[0] #>
{
   public interface IBaseDal<T>where T:class,new()
    {
       IQueryable<T> GetList(Expression<Func<T, bool>> whereLambda);
       IQueryable<T> GetPagingList<S>(int pageIndex, int pageSize, out int totalCount, bool isDec, Expression<Func<T, bool>> whereLambda, Expression<Func<T, S>> orderByLambda);
       void Add(T model);
       int Update(Expression<Func<T, bool>> whereLambda, Expression<Func<T, T>> updateLambda);
       int DeleteReal(Expression<Func<T, bool>> whereLambda);
       int DeleteFake(Expression<Func<T, bool>> whereLambda, Expression<Func<T, T>> updateLambda);
    }
}
<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
