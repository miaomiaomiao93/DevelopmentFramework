// <autogenerated>
//   This file was generated by T4 code generator Configuration.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

//=============================================================================
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果重新生成代码，这些更改将会丢失。
// </auto-generated>
//=============================================================================
using Model.Base.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using IDal;
namespace Dal
{
    public class UserDal : BaseDal<UserModel>, IUserDal
    {
        /// <summary>
        /// 用户审核
        /// </summary>
        /// <param name="id">用户主键</param>
        /// <param name="uName">用户真实姓名</param>
        /// <param name="telNumber">手机号码</param>
        /// <param name="eMail">邮箱</param>
        /// <param name="organizeName">组织名称</param>
        /// <param name="organizeId">组织主键</param>
        /// <param name="roleId">角色主键</param>
        /// <param name="levelId">等级主键</param>
        /// <param name="status">0：审核失败，1：审核中，2：审核成功</param>
        /// <returns></returns>
        public bool VerifyUser(long id, string uName, string telNumber, string eMail, string organizeName, long organizeId, long roleId, long levelId, int status)
        {
            var organize = this.entity.Set<OrganizeModel>().Where(t => t.Id == organizeId).FirstOrDefault();
            organize.OrganizeName = organizeName;
            var user = this.entity.Set<UserModel>().Where(t => t.Id == id).FirstOrDefault();
            user.UName = uName;
            user.TelNumber = telNumber;
            user.EMail = eMail;
            user.RoleId = roleId;
            user.LevelId = levelId;
            user.Status = status;
            this.entity.Entry<OrganizeModel>(organize).State = System.Data.Entity.EntityState.Modified;
            this.entity.Entry<UserModel>(user).State = System.Data.Entity.EntityState.Modified;
            return this.entity.SaveChanges() > 0;
        }
    }
}
